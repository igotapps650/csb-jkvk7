{"version":3,"sources":["App.js","index.js"],"names":["App","useState","lostSq","setLostSq","target","setTarget","odd","setOdd","recover1","setRecover1","recover2","setRecover2","nextStake","setNextStake","globalVars","useEffect","localStorage","getItem","setItem","JSON","stringify","data","parse","totalLostSq","forEach","element","getTotalLostSq","profit","console","log","getProfit","className","onClick","clear","window","location","reload","type","onChange","e","value","losts","lost","totalLost","newLostSq","index1","indexOf","index2","splice","newIndex2","rootElement","document","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.815cdc8e.chunk.js","sourcesContent":["import { useEffect, useState } from \"react\";\n\nimport \"./styles.css\";\n\nexport default function App() {\n  // let data = JSON.parse(localStorage.getItem('data'));\n  //console.log(data);\n\n  //defaults\n  const [lostSq, setLostSq] = useState([0]);\n  const [target, setTarget] = useState(0);\n  const [odd, setOdd] = useState(0);\n  const [recover1, setRecover1] = useState(0);\n  const [recover2, setRecover2] = useState(0);\n  const [nextStake, setNextStake] = useState(0);\n\n  let globalVars = {};\n\n  //updating state with localStorage\n  useEffect(() => {\n    if (localStorage.getItem(\"data\") === null) {\n      localStorage.setItem(\"data\", JSON.stringify({ lostSq }));\n    } else {\n      const data = JSON.parse(localStorage.getItem(\"data\"));\n      setLostSq(data.lostSq);\n      setTarget(data.target);\n      setOdd(data.odd);\n      setRecover1(data.recover1);\n      setRecover2(data.recover2);\n      setNextStake(data.nextStake);\n    }\n  }, []);\n\n  //handles\n  const updateTarget = function (e) {\n    setTarget(e.target.value * 1);\n  };\n\n  const updateLostSq = function (e) {\n    const losts = JSON.parse(`[${e.target.value}]`);\n    setLostSq(losts);\n  };\n\n  const getTotalLostSq = function () {\n    let totalLostSq = 0;\n    lostSq.forEach((element) => {\n      totalLostSq += element;\n    });\n\n    //tempral storage\n    globalVars.totalLostSq = totalLostSq;\n  };\n  getTotalLostSq();\n\n  const updateOdd = function (e) {\n    setOdd(e.target.value * 1);\n  };\n\n  const updateRecover1 = function (e) {\n    globalVars.recover1 = e.target.value; //mul * 1\n\n    if (globalVars.recover1) {\n      setRecover1(globalVars.recover1 * 1);\n    } else {\n      setRecover1(0);\n    }\n  };\n\n  const updateRecover2 = function (e) {\n    globalVars.recover2 = e.target.value;\n\n    if (globalVars.recover2) {\n      setRecover2(globalVars.recover2 * 1);\n    } else {\n      setRecover2(0);\n    }\n  };\n\n  const lost = function () {\n    const totalLost = recover1 + recover2;\n    //add a new lost\n    setLostSq([...lostSq, totalLost]);\n  };\n\n  const won = function () {\n    //remove recovereds from lostSq\n    const newLostSq = [...lostSq];\n    const index1 = newLostSq.indexOf(recover1);\n    const index2 = newLostSq.indexOf(recover2);\n\n    if (index1 !== -1 && index2 !== -1) {\n      console.log(\"both found\");\n      newLostSq.splice(index1, 1);\n\n      const newIndex2 = newLostSq.indexOf(recover2);\n      newLostSq.splice(newIndex2, 1);\n    } else {\n      console.log(\"both not found\");\n    }\n    setLostSq([...newLostSq]);\n  };\n\n  const getProfit = function () {\n    let profit = odd * globalVars.totalLostSq - globalVars.totalLostSq;\n    globalVars.profit = profit;\n\n    console.log(\n      `(${odd}*${globalVars.totalLostSq}) - ${globalVars.totalLostSq}`\n    );\n  };\n  getProfit(); //temp location\n\n  const clearData = function () {\n    localStorage.clear();\n    window.location.reload();\n    console.log(\"cleard\");\n  };\n\n  const calc = function () {\n    //  this if to be checked later\n    if (globalVars.lost) {\n      setLostSq([...lostSq, globalVars.lost * 1]);\n    }\n\n    console.log({ recover1, recover2, lostSq, target, odd, nextStake });\n    const stake = (recover1 + recover2) / (odd - 1);\n    setNextStake(stake);\n\n    //saving to localStarage\n    localStorage.setItem(\n      \"data\",\n      JSON.stringify({ lostSq, target, odd, recover1, recover2, nextStake })\n    );\n    //  console.log(JSON.parse(localStorage.getItem('data')))\n  };\n\n  return (\n    <div className=\"card col bg-warning\">\n      <div>\n        <button onClick={clearData}>clear data</button>\n      </div>\n      <div>\n        {JSON.stringify(lostSq)}\n        <br /> totalLost: {globalVars.totalLostSq}\n      </div>\n\n      <form>\n        <div>\n          <label>Target</label>\n          <input type=\"text\" onChange={updateTarget} value={target} />\n        </div>\n\n        <div>\n          <label>Odd</label>\n          <input type=\"text\" onChange={updateOdd} value={odd} />\n        </div>\n\n        <div>\n          <label>lost sequence</label>\n          <input type=\"text\" onChange={updateLostSq} value={lostSq} />\n        </div>\n\n        <div>\n          <label>recover1</label>\n          <input type=\"text\" onChange={updateRecover1} value={recover1} />\n        </div>\n\n        <div>\n          <label>recover2</label>\n          <input type=\"text\" onChange={updateRecover2} value={recover2} />\n        </div>\n\n        <div>\n          <label>Next Stake</label>\n          <span> Ghc {nextStake}</span>\n        </div>\n      </form>\n      <button onClick={calc}>Calc </button>\n\n      <div className=\"outcome p-3\">\n        <span className=\"mr-2\">outcome</span>\n        <span>\n          <button className=\"btn btn-danger m-1\" onClick={lost}>\n            lost\n          </button>\n          <button className=\"btn btn-success m-1\" onClick={won}>\n            won\n          </button>\n        </span>\n      </div>\n    </div>\n  );\n}\n","import { StrictMode, useEffect, useState } from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<App />, rootElement);\n"],"sourceRoot":""}